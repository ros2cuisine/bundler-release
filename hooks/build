#!/bin/bash

# Local test values

# Environment
DOCKERHUB_NAME=ros2cuisine
DEST_REPO=bundler
DEST_NAME="${SRC_NAME}"

# dynamic Values
apt-get update && apt-get install git -y -q
VCS_REF="$(git rev-parse --short HEAD)"
BUILD_DATE="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"

echo "DEBUG: ${VCSREF} and ${BUILD_DATE}"

if [ ${DOCKER_TAG} == "eloquent-latest" ]; then
    DEST_TAG="eloquent-latest"
    SRC_TAG="eloquent-staged"
elif [ ${DOCKER_TAG} == "latest" ]; then
    DEST_TAG="latest"
    SRC_TAG="staged"
else
    echo "not configured tag ${DOCKER_TAG}"
    exit 1
fi
# Begin generating manifest file
echo "image: ${DOCKERHUB_NAME}/${DEST_REPO}:${DEST_TAG}" > auto-docker-manifest.yaml
echo "manifests:" >> auto-docker-manifest.yaml

echo "TEST"
# Cycle trough the the arches
for DEST_BUILD_ARCH in ${DEST_ARCHES}
do
echo "DEBUG: Begin Cycle ${DEST_BUILD_ARCH}"
    DEST_OS="linux"
    # Set AMD64
    if [ ${DEST_BUILD_ARCH} == "amd64" ]; then
        SRC_NAME="amd64"
        DEST_ARCH=${DEST_BUILD_ARCH}
        DOCKER_PREFIX=""
        echo "  - image: ${DEST_NAME}/${DEST_REPO}:${DEST_ARCH}-${DEST_TAG}" >> auto-docker-manifest.yaml
        echo "    platform:" >> auto-docker-manifest.yaml
        echo "      architecture: ${DEST_ARCH}" >> auto-docker-manifest.yaml
        echo "      os: ${DEST_OS}" >> auto-docker-manifest.yaml

    # Set armhf
    elif [ ${DEST_BUILD_ARCH} == "armhf" ]; then
        SRC_NAME="arm32v7"
        DEST_ARCH="arm"
        DOCKERFILE_PREFIX="armhf."
        echo "  - image: ${DEST_NAME}/${DEST_REPO}:${DEST_ARCH}-${DEST_TAG}" >> auto-docker-manifest.yaml
        echo "    platform:" >> auto-docker-manifest.yaml
        echo "      architecture: ${DEST_ARCH}" >> auto-docker-manifest.yaml
        echo "      os: ${DEST_OS}" >> auto-docker-manifest.yaml
        echo "      variant: v7" >> auto-docker-manifest.yaml

    # Set arm64
    elif [ ${DEST_BUILD_ARCH} == "arm64v8" ]; then
        SRC_NAME="arm64v8"
        DEST_ARCH="arm64"
        DOCKERFILE_PREFIX="aarch64."
        echo "  - image: ${DEST_NAME}/${DEST_REPO}:${DEST_ARCH}-${DEST_TAG}" >> auto-docker-manifest.yaml
        echo "    platform:" >> auto-docker-manifest.yaml
        echo "      architecture: ${DEST_ARCH}" >> auto-docker-manifest.yaml
        echo "      os: ${DEST_OS}" >> auto-docker-manifest.yaml
        echo "      variant: v8" >> auto-docker-manifest.yaml

    # arch not found
    else
        echo "DEBUG: The buildarch is not referenced here. DEST_ARCH not set."
        exit 1
    fi

    echo "Begin Building"
    DOCKERFILE="${DOCKERFILE_PREFIX}Dockerfile"
    # Build the docker image
    docker build \
        --compress \
        --pull \
        --label description="The Bundle image that is the source for other images" \
        --label docker.cmd="docker run -d ros2cuisine/bundler" \
        --label maintainer="cuisine@ichbestimmtnicht.de" \
        --label vendor="ichbestimmtnicht" \
        --label vcs-url="https://gitlab.com/ros2cuisine/bundler" \
        --label url="https://gitlab.com/ros2cuisine/bundler" \
        --label name="${IMAGE_NAME}" \
        --label version="${BUILD_VERSION}"\
        --label build-date="${BUILD_DATE}" \
        --label vcs-ref="${VCS_REF}" \
        --label schema-version="1.0.0-rc1" \
        --file "${DOCKERFILE}" \
        --build-arg BUILD_DATE=${BUILD_DATE} \
        --build-arg VCS_REF="${VCS_REF}" \
        --build-arg ROS_DISTRO=eloquent \
        --build-arg DEST_REPO="${DEST_REPO}" \
        --build-arg DOCKERHUB_NAME=ros2cuisine \
        --build-arg ROS_DISTRO=eloquent \
        --build-arg BUILD_REPO=ubuntu \
        --build-arg BUILD_VERSION=bionic \
        --build-arg SRC_USER_NAME="${SRC_NAME}" \
        --tag "${DOCKERHUB_NAME}/${DEST_REPO}:${SRC_TAG}-${DEST_BUILD_ARCH}" \
        .
    echo "Pushing image"
    docker push "${DOCKERHUB_NAME}/${DEST_REPO}:${SRC_TAG}-${DEST_BUILD_ARCH}"

done

echo "Exit build hook"
exit 0
