#!/bin/bash
# Get the manifest-tool

apt-get update && apt-get install wget -y -q

wget -cO - https://github.com/estesp/manifest-tool/releases/download/v1.0.0/manifest-tool-linux-arm64 . > manifest-tool

chmod +x ./manifest-tool

# Environment
BUILD_DATE="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
TARGET_ARCHES="amd64 arm32v7 arm64v8"
DOCKER_TAG="eloquent-latest"
SRC_NAME=ros2cuisine
BUILD_TAG=staged
ROS_DISTRO="$(echo "$DOCKER_TAG" | rev | cut -d '-' -f 2 | rev )"
SRC_TAG=staged
DEST_REPO=bundler
DEST_NAME="${SRC_NAME}"
DEST_TAG="$(echo "$DOCKER_TAG" | cut -d '-' -f 2 )"
VCS_REF="$(git rev-parse --short HEAD)"

# Begin generating manifest file
echo "image: ${SRC_NAME}/${IMAGE_NAME}" > auto-docker-manifest.yaml
echo "manifests:" >> auto-docker-manifest.yaml

# Cycle trough the the arches
for DEST_BUILD_ARCH in ${TARGET_ARCHES}
do
    DEST_OS="linux"
    # Set AMD64
    if [ ${DEST_BUILD_ARCH} == "amd64" ]; then
        DEST_ARCH=${DEST_BUILD_ARCH}
        DOCKER_PREFIX=""
        echo "  - image: ${DEST_NAME}/${DEST_REPO}:${ROS_DISTRO}-${DEST_ARCH}-${DEST_TAG}" >> auto-docker-manifest.yaml
        echo "    platform:" >> auto-docker-manifest.yaml
        echo "      architecture: ${DEST_ARCH}" >> auto-docker-manifest.yaml
        echo "      os: ${DEST_OS}" >> auto-docker-manifest.yaml

    # Set armhf
    elif [ ${DEST_BUILD_ARCH} == "arm32v7" ]; then
        DEST_ARCH="arm"
        DOCKERFILE_PREFIX="armhf"
        echo "  - image: ${DEST_NAME}/${DEST_REPO}:${ROS_DISTRO}-${DEST_ARCH}-${DEST_TAG}" >> auto-docker-manifest.yaml
        echo "    platform:" >> auto-docker-manifest.yaml
        echo "      architecture: ${DEST_ARCH}" > auto-docker-manifest.yaml
        echo "      os: ${DEST_OS}" >> auto-docker-manifest.yaml
        echo "      variant: v7" >> auto-docker-manifest.yaml

    # Set arm64
    elif [ ${DEST_BUILD_ARCH} == "arm64v8" ]; then
        DEST_ARCH="arm64"
        DOCKERFILE_PREFIX="aarch64"
        echo "  - image: ${DEST_NAME}/${DEST_REPO}:${ROS_DISTRO}-${DEST_ARCH}-${DEST_TAG}" >> auto-docker-manifest.yaml
        echo "    platform:" >> auto-docker-manifest.yaml
        echo "      architecture: ${DEST_ARCH}" >> auto-docker-manifest.yaml
        echo "      os: ${DEST_OS}" >> auto-docker-manifest.yaml
        echo "      variant: v8" >> auto-docker-manifest.yaml

    # arch not found
    else
            echo "The buildarch is not referenced here. DEST_ARCH not set."
    fi

    DOCKERFILE="${DOCKERFILE_PREFIX}Dockerfile"

    # Build the docker image
    docker build \
        --compress \
        --pull \
        # Labels
        --label description="The Bundle image that is the source for other images" \
        --label docker.cmd="docker run -d ros2cuisine/bundler" \
        --label maintainer="cuisine@ichbestimmtnicht.de" \
        --label vendor="ichbestimmtnicht" \
        --label vcs-url="https://gitlab.com/ros2cuisine/bundler" \
        --label url="https://gitlab.com/ros2cuisine/bundler" \
        --label name="${IMAGE_NAME}" \
        --label version="${BUILD_VERSION}"\
        --label build-date="${BUILD_DATE}" \
        --label vcs-ref="${VCS_REF}" \
        --label schema-version="1.0.0-rc1" \
        --file "${DOCKERFILE_PREFIX}.Dockerfile" \
        # Build Arguments
        --build-arg BUILD_DATE=${BUILD_DATE} \
        --build-arg VCS_REF="${VCS_REF}" \
        --build-arg ROS_DISTRO=eloquent \
        --build-arg DEST_REPO="${DEST_REPO}" \
        --build-arg DOCKERHUB_NAME=ros2cuisine \
        --build-arg ROS_DISTRO=eloquent \
        --build-arg BUILD_REPO=ubuntu \
        --build-arg BUILD_VERSION=bionic \
        --build-arg SRC_USER_NAME="${DEST_BUILD_ARCH}" \
        --tag "${DEST_REPO}:${ROS_DISTRO}-${DEST_ARCH}-${BUILD_TAG}" \
        .
done

cat auto-docker-manifest.yaml
